---
fullnameOverride: k8s
defaultRules:
  rules:
    etcd: false
    kubeProxy: false
    kubeApiserverAvailability: false
    kubeApiserverBurnrate: false
    kubeApiserverHistogram: false
    kubeApiserverSlos: false
    kubeControllerManager: false
    kubeScheduler: false
    kubelet: false

kubeProxy:
  enabled: false
kubeEtcd:
  enabled: true
kubeApiServer:
  enabled: false
kubeControllerManager:
  enabled: false

alertmanager:
  enabled: false
  alertmanagerSpec:
    externalUrl: "https://alertmanager.k8s-prod-02.frickel.earth"
    replicas: 2
  config:
    receivers:
      - name: "null"
    route:
      group_by:
        - alertname
      routes:
        - matchers:
            - alertname = Watchdog
          receiver: "null"
          group_wait: 0s
          repeat_interval: 10m
        - matchers:
            - alertname = InfoInhibitor
          receiver: null
  podDisruptionBudget:
    enabled: true
  ingress:
    enabled: true
    ingressClassName: traefik
    hosts:
      - alertmanager.k8s-prod-02.frickel.earth

grafana:
  enabled: false
  defaultDashboardsTimezone: Europe/Berlin
  env:
    GF_DATABASE_TYPE: postgres
    GF_DATABASE_HOST: general-db1-prod.postgres:5432
    GF_DATABASE_NAME: grafana
    GF_DATABASE_SSL_MODE: require
  envValueFrom:
    GF_DATABASE_USER:
      secretKeyRef:
        name: grafana.general-db1-prod.credentials.postgresql.acid.zalan.do
        key: username
    GF_DATABASE_PASSWORD:
      secretKeyRef:
        name: grafana.general-db1-prod.credentials.postgresql.acid.zalan.do
        key: password
    GF_AUTH_AZUREAD_AUTH_URL:
      secretKeyRef:
        name: grafana-azuread
        key: auth-url
    GF_AUTH_AZUREAD_TOKEN_URL:
      secretKeyRef:
        name: grafana-azuread
        key: token-url
    GF_AUTH_AZUREAD_CLIENT_ID:
      secretKeyRef:
        name: grafana-azuread
        key: client-id
    GF_AUTH_AZUREAD_CLIENT_SECRET:
      secretKeyRef:
        name: grafana-azuread
        key: client-secret
  grafana.ini:
    server:
      root_url: "https://grafana.frickel.earth"
    security:
      cookie_secure: true
    auth:
      disable_login_form: "true"
      oauth_auto_login: "false"
    auth.azuread:
      name: 'siewertIO Azure Auth'
      enabled: "true"
      allow_sign_up: "true"
      scopes: 'openid email profile'
  ingress:
    enabled: true
    ingressClassName: traefik
    hosts:
      - grafana.frickel.earth
  plugins:
    - flant-statusmap-panel
    - grafana-piechart-panel
    - vonage-status-panel
  datasources:
    enabled: true
    defaultDatasourceEnabled: true
  serviceMonitor:
    enabled: true
  sidecar:
    dashboards:
      enabled: true
      folderAnnotation: 'internal.frickel.earth/grafana-folder'
      provider:
        disableDelete: true
        foldersFromFilesStructure: true
      searchNamespace: ALL

prometheus:
  enabled: true
  ingress:
    enabled: false
  thanosService:
    enabled: true
  prometheusSpec:
    replicas: 1
    disableCompaction: true
    externalLabels:
      monitor: k8s
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: hcloud-volumes
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 10Gi
    podMonitorNamespaceSelector:
      any: true
    podMonitorSelector: {}
    podMonitorSelectorNilUsesHelmValues: false
    ruleNamespaceSelector:
      any: true
    ruleSelector: {}
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorNamespaceSelector:
      any: true
    serviceMonitorSelector: {}
    serviceMonitorSelectorNilUsesHelmValues: false
