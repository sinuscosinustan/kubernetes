---
defaultRules:
  rules:
    etcd: false
    kubeProxy: false
    kubeApiserverAvailability: false
    kubeApiserverBurnrate: false
    kubeApiserverHistogram: false
    kubeApiserverSlos: false
    kubeControllerManager: false

kubeProxy:
  enabled: false
kubeEtcd:
  enabled: false
kubeApiServer:
  enabled: false
kubeControllerManager:
  enabled: false

alertmanager:
  enabled: true
  alertmanagerSpec:
    externalUrl: "https://alertmanager.home.frickel.earth"
  config:
    inhibit_rules:
    - equal:
      - namespace
      source_matchers:
      - alertname = InfoInhibitor
      target_matchers:
      - severity = info
    receivers:
    - name: "null"
    route:
      routes:
      - matchers:
        - alertname = Watchdog
        receiver: "null"
        group_wait: 0s
        repeat_interval: 10m
      - matchers:
        - alertname = InfoInhibitor
        receiver: null
  podDisruptionBudget:
    enabled: true
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - alertmanager.home.frickel.earth
    tls:
      - secretName: wildcard.home.frickel.earth-prod
        hosts:
          - alertmanager.home.frickel.earth

grafana:
  enabled: true
  defaultDashboardsTimezone: Europe/Berlin
  envValueFrom:
    GF_AUTH_AZUREAD_AUTH_URL:
      secretKeyRef:
        name: grafana-azuread
        key: auth-url
    GF_AUTH_AZUREAD_TOKEN_URL:
      secretKeyRef:
        name: grafana-azuread
        key: token-url
    GF_AUTH_AZUREAD_CLIENT_ID:
      secretKeyRef:
        name: grafana-azuread
        key: client-id
    GF_AUTH_AZUREAD_CLIENT_SECRET:
      secretKeyRef:
        name: grafana-azuread
        key: client-secret
  grafana.ini:
    server:
      root_url: "https://grafana.home.frickel.earth"
    security:
      cookie_secure: true
    auth:
      disable_login_form: "true"
      oauth_auto_login: "true"
    auth.azuread:
      name: 'siewertIO Azure Auth'
      enabled: "true"
      allow_sign_up: "true"
      scopes: 'openid email profile'
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - grafana.home.frickel.earth
    tls:
      - secretName: wildcard.home.frickel.earth-prod
        hosts:
          - grafana.home.frickel.earth
  plugins:
    - flant-statusmap-panel
    - grafana-piechart-panel
    - vonage-status-panel
  datasources:
    enabled: true
    defaultDatasourceEnabled: true
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: k8s-home-loki
          type: loki
          editable: false
          url: http://loki:3100
          jsonData:
            httpHeaderName1: 'X-Scope-OrgID'
            timeout: '120'
          secureJsonData:
            httpHeaderValue1: '1'
  serviceMonitor:
    enabled: true
  sidecar:
    dashboards:
      enabled: true
      folderAnnotation: 'internal.frickel.earth/grafana-folder'
      provider:
        disableDelete: true
        foldersFromFilesStructure: true
      searchNamespace: ALL
  dashboards:
    default:
      unpoller-dpi:
        gnetId: 11310
        revision: 5
        datasource: Prometheus
      unpoller-sites:
        gnetId: 11311
        revision: 5
        datasource: Prometheus
      unpoller-uswinsights:
        gnetId: 11312
        revision: 9
        datasource: Prometheus
      unpoller-usginsights:
        gnetId: 11313
        revision: 9
        datasource: Prometheus
      unpoller-uapinsights:
        gnetId: 11314
        revision: 10
        datasource: Prometheus
      unpoller-clientinsights:
        gnetId: 11315
        revision: 9
        datasource: Prometheus

prometheus:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - prometheus.home.frickel.earth
    tls:
      - secretName: wildcard.home.frickel.earth-prod
        hosts:
          - prometheus.home.frickel.earth
  prometheusSpec:
    retention: 10d
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 20Gi
    podMonitorNamespaceSelector:
      any: true
    podMonitorSelector: {}
    podMonitorSelectorNilUsesHelmValues: false
    ruleNamespaceSelector:
      any: true
    ruleSelector: {}
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorNamespaceSelector:
      any: true
    serviceMonitorSelector: {}
    serviceMonitorSelectorNilUsesHelmValues: false
